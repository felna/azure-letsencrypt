{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "gitHubUser": {
            "type": "string",
            "metadata": {
                "description": "Your GitHub username"
            },
            "defaultValue": "tescales"
        },
        "gitHubRepo": {
            "type": "string",
            "metadata": {
                "description": "Your GitHub repo"
            },
            "defaultValue": "azure-bootstrapper-arm"
        },
        "subscriptionId": {
            "type": "string",
            "metadata": {
                "description": "Your Azure Subscription Id"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "aadTenantId": {
            "type": "string",
            "metadata": {
                "description": "Your AzureAD TenantId"
            },
            "defaultValue": "[subscription().tenantId]"
        },
        "roleName": {
            "type": "string",
            "metadata": {
                "description": "Choose the Role to Assign"
            },
            "defaultValue": "Owner"
        },
        "newVaultName": {
            "type": "string",
            "metadata": {
                "description": "Enter a name to deploy a new KeyVault and grant access to the bootstrapper script, or type 'none' to skip."
            },
            "defaultValue": "kv-bootstrap"
        },
        "configurationStorageAccount": {
            "type": "string",
            "defaultValue": "[concat(resourceGroup().name, 'stor')]"
        },
        "configurationStorageShareName": {
            "type": "string",
            "defaultValue": "ffsync-data"
        },
        "privateAddress": {
            "type": "string",
            "metadata": {
                "description": "Enter the internal domain to direct traffic to, in the format http://domain-or-ip:8080."
            }
        },
        "publicDomain": {
            "type": "string",
            "metadata": {
                "description": "Domain to use for LetsEncrypt Certificate."
            }
        },
        "publicPort": {
            "type": "string",
            "defaultValue": "443"
        },
        "ssl-email": {
            "type": "string",
            "defaultValue": "certbot@eff.org"
        },
        "ssl-env": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Set to 'staging' to use LetsEncrypt staging servers; recommended for testing."
            }

        }
    },
    "variables": {
        "NginxConfigShare": "nginx-config",
        "NginxHtmlShare": "nginx-html",
        "NginxCertShare": "nginx-certs",
        "ssl-env": "[concat('--',parameters('ssl-env'))]",
        "imagePath": "mcr.microsoft.com/azure-cli",
        "imageName": "[take(toLower( split(variables('imagePath'),'/')[1]),23)]",
        "cgName": "[concat('deploy_', variables('imageName'))]",
        "roleDefinitions": {
            "Owner": {
                "id": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
            },
            "Contributor": {
                "id": "b24988ac-6180-42a0-ab88-20f7382dd24c"
            },
            "Reader": {
                "id": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
            },
            "StorageBlobDataOwner": {
                "id": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
            },
            "StorageBlobDataContributor": {
                "id": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
            },
            "StorageBlobDataReader": {
                "value": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1"
            },
            "none": {
                "id": "none"
            }
        },
        "chosenRole": "[variables('roleDefinitions')[parameters('roleName')].id]",
        "roleDefinitionId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', variables('chosenRole'))]",
        "roleAssignmentId": "[guid(resourceGroup().name)]",
        "containerGroupName": "[resourceGroup().name]",
        "StorageAccountName": "[take(parameters('configurationStorageAccount'),23)]",
        "configStorageShare": "[parameters('configurationStorageShareName')]"
    },
    "resources": [
        {
            "name": "[variables('cgName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "location": "[resourcegroup().location]",
            "comments": "",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "containers": [
                    {
                        "name": "[variables('imageName')]",
                        "properties": {
                            "image": "[variables('imagePath')]",
                            "command": [
                                "/bin/bash",
                                "-c",
                                "chmod +x /$BOOTSTRAP_REPO/bootstrap/bootstrap.sh; /$BOOTSTRAP_REPO/bootstrap/bootstrap.sh"
                            ],
                            "volumeMounts": [
                                {
                                    "name": "git-bootstrapper",
                                    "mountPath": "[concat('/', parameters('gitHubUser'))]"
                                }
                            ],
                            "environmentVariables": [
                                {
                                    "name": "BOOTSTRAP_REPO",
                                    "value": "[concat(parameters('gitHubUser'), '/', parameters('gitHubRepo'))]"
                                },
                                {
                                    "name": "AZURE_RESOURCE_GROUP",
                                    "value": "[resourceGroup().name]"
                                },
                                {
                                    "name": "AZURE_LOCATION",
                                    "value": "[resourceGroup().location]"
                                },
                                {
                                    "name": "AZURE_SUBSCRIPTION_ID",
                                    "value": "[parameters('subscriptionId')]"
                                },
                                {
                                    "name": "AZURE_AADTENANT_ID",
                                    "value": "[parameters('aadTenantId')]"
                                },
                                {
                                    "name": "AZURE_KEYVAULT",
                                    "value": "[parameters('newVaultName')]"
                                },
                                {
                                    "name": "AZURE_STORAGE_KEY",
                                    "securevalue": "[listKeys(variables('storageAccountName'),'2017-10-01').keys[0].value]"
                                },
                                {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[variables('storageAccountName')]"
                                },
                                {
                                    "name": "AZURE_STORAGE_SHARE",
                                    "value": "[variables('configStorageShare')]"
                                },
                                {
                                    "name": "PRIVATE_ADDRESS",
                                    "value": "[parameters('privateAddress')]"
                                },
                                {
                                    "name": "PUBLIC_DOMAIN",
                                    "value": "[parameters('publicDomain')]"
                                },
                                {
                                    "name": "PUBLIC_PORT",
                                    "value": "[parameters('publicPort')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "1",
                                    "memoryInGb": "1"
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "volumes": [
                    {
                        "name": "git-bootstrapper",
                        "gitRepo": {
                            "repository": "[concat('https://github.com/', parameters('gitHubUser'), '/', parameters('gitHubRepo'))]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[not(equals(variables('chosenRole'),'none'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "name": "[variables('roleAssignmentId')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
                "scope": "[resourcegroup().id]"
            }
        },
        {
            "condition": "[not(equals(parameters('newVaultName'),'none'))]",
            "name": "[parameters('newVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "location": "[resourcegroup().location]",
            "tags": {
            },
            "dependsOn": [
                "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]"
            ],
            "properties": {
                "tenantId": "[parameters('aadTenantId')]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.tenantId]",
                        "objectId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [
                            ],
                            "secrets": [
                                "all"
                            ],
                            "certificates": [
                            ],
                            "storage": [
                            ]
                        }
                    }
                ],
                "enabledForTemplateDeployment": true
            }
        },
        {
            "name": "[variables('containerGroupName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "nginx-ssl",
                        "properties": {
                            "image": "andreilhicas/nginx-letsencrypt",
                            "volumeMounts": [
                                {
                                    "mountPath": "/etc/nginx/conf.d",
                                    "name": "nginx-config"
                                },
                                {
                                    "mountPath": "/var/www/html",
                                    "name": "nginx-html"
                                },
                                {
                                    "mountPath": "/usr/share/nginx/certificates",
                                    "name": "nginx-certs"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": ".5",
                                    "memoryInGb": ".5"
                                }
                            },
                            "environmentVariables": [
                                {
                                    "name": "DOMAIN",
                                    "value": "[parameters('publicDomain')]"
                                },
                                {
                                    "name": "EMAIL",
                                    "value": "[parameters('ssl-email')]"
                                },
                                {
                                    "name": "OPTIONS",
                                    "value": "[if(empty(parameters('ssl-env')),'',variables('ssl-env'))]"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "80",
                                    "protocol": "TCP"
                                },
                                {
                                    "port": "[parameters('publicPort')]",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "osType": "Linux",
                "volumes": [
                    {
                        "name": "nginx-config",
                        "azureFile": {
                            "shareName": "[variables('NginxConfigShare')]",
                            "readOnly": true,
                            "storageAccountName": "[variables('StorageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountName'),'2017-10-01').keys[0].value]"
                        }
                    },
                    {
                        "name": "nginx-html",
                        "azureFile": {
                            "shareName": "[variables('NginxHtmlShare')]",
                            "readOnly": false,
                            "storageAccountName": "[variables('StorageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountName'),'2017-10-01').keys[0].value]"
                        }
                    },
                    {
                        "name": "nginx-certs",
                        "azureFile": {
                            "shareName": "[variables('NginxCertShare')]",
                            "readOnly": false,
                            "storageAccountName": "[variables('StorageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountName'),'2017-10-01').keys[0].value]"
                        }
                    }
                ],
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "protocol": "tcp",
                            "port": "[parameters('publicPort')]"
                        },
                        {
                            "protocol": "tcp",
                            "port": "80"
                        }
                    ],
                    "dnsNameLabel": "[variables('containerGroupName')]"
                }
            }
        },
        {
            "name": "[variables('StorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "description": "Used for Nginx+Certificate Storage"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('NginxCertShare'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('NginxConfigShare'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('NginxHtmlShare'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        }
    ],
    "outputs": {
    }
}